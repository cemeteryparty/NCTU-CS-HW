
#user  nobody;
worker_processes  1;

# This default error log path is compiled-in to make sure configuration parsing
# errors are logged somewhere, especially during unattended boot when stderr
# isn't normally logged anywhere. This path will be touched on every nginx
# start regardless of error log location configured here. See
# https://trac.nginx.org/nginx/ticket/147 for more info. 
#
#error_log  /var/log/nginx/error.log;
#

#pid        logs/nginx.pid;


events {
	worker_connections  1024;
}


http {
	include       mime.types;
	default_type  application/octet-stream;

	#log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
	#                  '$status $body_bytes_sent "$http_referer" '
	#                  '"$http_user_agent" "$http_x_forwarded_for"';

	#access_log  logs/access.log  main;

	sendfile        on;
	#tcp_nopush     on;

	#keepalive_timeout  0;
	keepalive_timeout  65;
	server_tokens off; # hide server version
	#gzip  on;
	
	server {
		listen       80;
		server_name  localhost;
		#charset koi8-r;
		#access_log  logs/host.access.log  main;
		location / {
			root   /usr/local/www/html;
			index  index.html index.htm;
		}
		location /private {
			root                  /usr/local/www/html;
			index                 secret.html;
			satisfy               all;
			allow                 10.113.0.254;
			deny                  all;
			auth_basic            "Admin Area";
			auth_basic_user_file  /usr/local/etc/nginx/.htpasswd;
		}
		#error_page  404              /404.html;
		# redirect server error pages to the static page /50x.html
		error_page   500 502 503 504  /50x.html;
		location = /50x.html {
			root   /usr/local/www/nginx-dist;
		}
	}

	map $http_upgrade $connection_upgrade {
		default upgrade;
		'' close;
	}
	upstream websocket {
		server localhost:8080;
	}
	upstream websocketsec {
		server localhost:8081;
	}
	server {
		listen       80;
		server_name  95_ws.nctu.cs;
		location /wsdemo {
			root   /usr/local/www/html;
			index  wsdemo.html;
		}
		location /wsconnect {
			proxy_pass http://websocket;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection $connection_upgrade;
			proxy_set_header Host $host;
		}
		#error_page  404              /404.html;
		# redirect server error pages to the static page /50x.html
		error_page   500 502 503 504  /50x.html;
		location = /50x.html {
			root   /usr/local/www/nginx-dist;
		}
	}

	# Virtual Hosts
	server {
		listen       80;
		server_name  95.nctu.cs;
		return 301 https://95.nctu.cs$request_uri;
	}
	# HTTPS server
	server {
		listen       443 ssl http2;
		server_name  95.nctu.cs;

		ssl_certificate             /usr/local/etc/nginx/ssl/cert.crt;
		ssl_certificate_key         /usr/local/etc/nginx/ssl/cert.key;
		#ssl_session_cache          shared:SSL:1m;
		#ssl_session_timeout        5m;
		#ssl_ciphers                HIGH:!aNULL:!MD5;
		#ssl_prefer_server_ciphers  on;
		ssl_protocols               TLSv1.2 TLSv1.3;

		
		location / {
			add_header  Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
			add_header  X-Frame-Options SAMEORIGIN;
			add_header  X-XSS-Protection "1; mode=block";
			add_header  Access-Control-Allow-Origin 'https://95.nctu.cs';
			add_header  Access-Control-Allow-Credentials 'true';
			add_header  Access-Control-Allow-Methods 'GET, POST, HEAD, OPTIONS';
			add_header  Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
			if ($request_method = 'OPTIONS'){
				return 204;
			}
			root   /usr/local/www/html;
			index  vhost.html;
		}
		location /~nisstu95 {
			alias   /net/home/nisstu95/public_html/;
			index   index.html;
			default_type text/html;
			types {
				text/plain log;
			}
		}
		location /~nisuser1 {
			alias   /net/home/nisuser1/public_html/;
			index   index.html;
		}
		location /~nisuser2 {
			alias   /net/home/nisuser2/public_html/;
			index   index.html;
		}
		location /wordpress {
			root   /usr/local/www/nginx-dist;
			index index.php index.html index.htm; 
			try_files $uri $uri/ /wordpress/index.php?$args;
			location ~ .php$ {
				try_files $uri =404;
				fastcgi_split_path_info ^(.+.php)(/.+)$;
				fastcgi_pass unix:/var/run/php-fpm.sock;
				fastcgi_index index.php;
				fastcgi_param SCRIPT_FILENAME $request_filename;
				include fastcgi_params;
			}
		}
		location /wsconnect {
			proxy_pass https://websocketsec;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection $connection_upgrade;
			proxy_set_header Host $host;
		}
		location ^~ /app {
			root /usr/local/www/html;
			index index.php;
			try_files $uri $uri/ /app/index.php$is_args$args;
			location ~ .php$ {
				try_files $uri =404;
				fastcgi_split_path_info ^(.+.php)(/.+)$;
				fastcgi_pass unix:/var/run/php-fpm.sock;
				fastcgi_index index.php;
				fastcgi_param SCRIPT_FILENAME $request_filename;
				include fastcgi_params;
			}
		}
		location ~ .php$ {
			root /usr/local/www/html;
			try_files $uri =404;
			fastcgi_split_path_info ^(.+.php)(/.+)$;
			fastcgi_pass unix:/var/run/php-fpm.sock;
			fastcgi_index index.php;
			fastcgi_param SCRIPT_FILENAME $request_filename;
			include fastcgi_params;
		}
		
		#error_page  404              /404.html;
		# redirect server error pages to the static page /50x.html
		error_page   500 502 503 504  /50x.html;
		location = /50x.html {
			root   /usr/local/www/nginx-dist;
		}
	}

}
